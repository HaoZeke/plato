diff -ru a/Makefile b/Makefile
--- a/Makefile	2018-04-12 15:14:06.000000000 +0200
+++ b/Makefile	2018-04-26 17:28:57.393916084 +0200
@@ -360,8 +360,8 @@
 $(THREAD_LIB) : $(THREAD_OBJ)
 $(PKCS7_LIB) : $(PKCS7_OBJ)
 
-INSTALL_LIBS := $(MUPDF_LIB) $(THIRD_LIB)
-
+INSTALL_LIBS := $(MUPDF_LIB)
+ 	
 # --- Tools and Apps ---
 
 MUTOOL_EXE := $(OUT)/mutool
@@ -517,7 +517,7 @@
 cscope.out: cscope.files
 	cscope -b
 
-all: libs apps
+all: libs
 
 clean:
 	rm -rf $(OUT)
diff -ru a/Makerules b/Makerules
--- a/Makerules	2018-04-12 15:14:06.000000000 +0200
+++ b/Makerules	2018-04-26 17:09:23.140857713 +0200
@@ -155,6 +155,34 @@
 #   2) do a non cross compile build (e.g. windows in MSVC) first.
 #   3) download the generated files from mupdf.com.
 
+ifeq "$(OS)" "kobo"
+CC = arm-linux-gnueabihf-gcc
+CXX = arm-linux-gnueabihf-gcc++
+LD = arm-linux-gnueabihf-ld
+AR = arm-linux-gnueabihf-ar
+AS = arm-linux-gnueabihf-as
+CFLAGS += -O2 -fPIC -mcpu=cortex-a9 -mfpu=neon -DTOFU_CJK_LANG -DTOFU_CJK_EXT -DNO_ICC -DFZ_ENABLE_JS=0
+CROSSCOMPILE=yes
+HAVE_PTHREAD := yes
+HAVE_LIBCRYPTO := no
+HAVE_X11 := no
+HAVE_GLFW := no
+SYS_PTHREAD_CFLAGS :=
+SYS_PTHREAD_LIBS := -lpthread
+SYS_FREETYPE_CFLAGS := -I../freetype2/include
+SYS_FREETYPE_LIBS := -L../freetype2/objs/.libs -lfreetype
+SYS_HARFBUZZ_CFLAGS := -I../harfbuzz/src
+SYS_HARFBUZZ_LIBS := -L../harfbuzz/src/.libs -lharfbuzz
+SYS_OPENJPEG_CFLAGS := -I../openjpeg/src/lib/openjp2
+SYS_OPENJPEG_LIBS := -L../openjpeg/build/bin -lopenjpeg
+SYS_JBIG2DEC_CFLAGS := -I../jbig2dec
+SYS_JBIG2DEC_LIBS := -L../jbig2dec/.libs -ljbig2dec
+SYS_LIBJPEG_CFLAGS := -I../libjpeg
+SYS_LIBJPEG_LIBS := -L../libjpeg/.libs -ljpeg
+SYS_ZLIB_CFLAGS := -I../zlib
+SYS_ZLIB_LIBS := -L../zlib -lz
+endif
+
 ifeq "$(OS)" "beagle-cross"
 CC = arm-none-linux-gnueabi-gcc
 CXX = arm-none-linux-gnueabi-g++
diff -ru a/source/svg/svg-run.c b/source/svg/svg-run.c
--- a/source/svg/svg-run.c	2018-04-12 15:14:06.000000000 +0200
+++ b/source/svg/svg-run.c	2018-04-27 11:40:50.101616658 +0200
@@ -812,7 +812,6 @@
 	if (h_att) h = svg_parse_length(h_att, state->viewbox_h, state->fontsize);
 
 	/* TODO: new transform */
-	fz_warn(ctx, "push viewport: %g %g %g %g", x, y, w, h);
 
 	state->viewport_w = w;
 	state->viewport_h = h;
@@ -832,8 +831,7 @@
 	{
 		sscanf(viewbox_att, "%g %g %g %g", &min_x, &min_y, &box_w, &box_h);
 
-		/* scale and translate to fit [x y w h] to [0 0 viewport.w viewport.h] */
-		fz_warn(ctx, "push viewbox: %g %g %g %g", min_x, min_y, box_w, box_h);
+		/* TODO: scale and translate to fit [x y w h] to [0 0 viewport.w viewport.h] */
 	}
 }
 
